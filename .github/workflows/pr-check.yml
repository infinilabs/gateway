name: PR-Check

on:
    pull_request:
        branches: [ "main" ]

defaults:
  run:
    shell: bash

env:
    GO_VERSION: 1.23.4
    PNAME: gateway

jobs:
    format_check:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout current repository
              uses: actions/checkout@v4
              with:
                path: ${{ env.PNAME }}

            - name: Checkout framework repository
              uses: actions/checkout@v4
              with:
                repository: infinilabs/framework
                path: framework

            - name: Checkout framework-vendor
              uses: actions/checkout@v4
              with:
                ref: main
                repository: infinilabs/framework-vendor
                path: vendor

            - name: Set up go toolchain
              uses: actions/setup-go@v5
              with:
                go-version: ${{ env.GO_VERSION }}
                check-latest: false
                cache: true

            - name: Check go toolchain
              run: go version
              
            - name: Code format
              shell: bash
              run: |
                echo Home path is $HOME
                export WORKBASE=$HOME/go/src/infini.sh
                export WORK=$WORKBASE/$PNAME

                # for format workspace
                mkdir -p $HOME/go/src/
                ln -s $GITHUB_WORKSPACE $WORKBASE
                
                # check work folder
                ls -lrt $WORKBASE/
                ls -alrt $WORK

                # for code format
                cd $WORK
                echo Formating code at $PWD ...
                make format

            - name: Check for changes after format
              id: check-changes
              shell: bash
              run: |
                export WORKBASE=$HOME/go/src/infini.sh
                export WORK=$WORKBASE/$PNAME

                # for foramt check
                cd $WORK
                if [[ $(git status --porcelain | grep -c " M .*\.go$") -gt 0 ]]; then
                  echo "go format detected formatting changes"
                  echo "changes=true" >> $GITHUB_OUTPUT
                else
                  echo "go format no changes found"
                  echo "changes=false" >> $GITHUB_OUTPUT
                fi
            
            - name: Fail workflow if changes after format
              if: steps.check-changes.outputs.changes == 'true'
              run: |
                export WORKBASE=$HOME/go/src/infini.sh
                export WORK=$WORKBASE/$PNAME

                # for foramt check
                cd $WORK && echo
                git status --porcelain | grep " M .*\.go$"
                echo "----------------------------------------------------------------------------------"
                echo "IMPORTANT: Above files are not formatted, please run 'make format' to format them."
                echo "----------------------------------------------------------------------------------"
                exit 1

    unit_test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout current repository
              uses: actions/checkout@v4
              with:
                path: ${{ env.PNAME }}

            - name: Checkout framework repository
              uses: actions/checkout@v4
              with:
                repository: infinilabs/framework
                path: framework

            - name: Checkout framework-vendor
              uses: actions/checkout@v4
              with:
                ref: main
                repository: infinilabs/framework-vendor
                path: vendor

            - name: Set up go toolchain
              uses: actions/setup-go@v5
              with:
                go-version: ${{ env.GO_VERSION }}
                check-latest: false
                cache: true

            - name: Check go toolchain
              run: go version

            - name: Unit test
              env:
                GOFLAGS: -tags=ci
              run: |
                echo Home path is $HOME
                export WORKBASE=$HOME/go/src/infini.sh
                export WORK=$WORKBASE/$PNAME

                # for test workspace
                mkdir -p $HOME/go/src/
                ln -s $GITHUB_WORKSPACE $WORKBASE
                
                # check work folder
                ls -lrt $WORKBASE/
                ls -alrt $WORK

                # for unit test
                cd $WORK
                echo Testing code at $PWD ...
                make test
    
    code_lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout current repository
              uses: actions/checkout@v4
              with:
                path: ${{ env.PNAME }}

            - name: Checkout framework repository
              uses: actions/checkout@v4
              with:
                repository: infinilabs/framework
                path: framework

            - name: Checkout framework-vendor
              uses: actions/checkout@v4
              with:
                ref: main
                repository: infinilabs/framework-vendor
                path: vendor

            - name: Set up go toolchain
              uses: actions/setup-go@v5
              with:
                go-version: ${{ env.GO_VERSION }}
                check-latest: false
                cache: true

            - name: Check go toolchain
              run: go version

            - name: Code lint
              env:
                GOFLAGS: -tags=ci
              run: |
                echo Home path is $HOME
                export WORKBASE=$HOME/go/src/infini.sh
                export WORK=$WORKBASE/$PNAME

                # for lint workspace
                mkdir -p $HOME/go/src/
                ln -s $GITHUB_WORKSPACE $WORKBASE
                
                # check work folder
                ls -lrt $WORKBASE/
                ls -alrt $WORK

                # for code lint
                cd $WORK
                echo Linting code at $PWD ...
                make lint